---
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version_rpm }}/vector-{{ vector_version_rpm }}-1.x86_64.rpm"
        dest: "./vector-{{ vector_version_rpm }}-1.x86_64.rpm"
        mode: '0644'
    # - name: Install vector packages
    #   become: true
    #   ansible.builtin.yum:
    #     name:
    #       - vector-{{ vector_version_rpm }}-1.x86_64.rpm
    #     when: ansible_facts['pkg_mgr'] == 'yum'
    #     state: present
    - name: Install vector packages
      become: true
      block:
        - name: Install vector packages (yum)
          ansible.builtin.yum:
            name:
              - "vector-{{ vector_version_rpm }}-1.x86_64.rpm"
          notify: Reload vector
          when: ansible_facts['pkg_mgr'] == 'yum'
    
        - name: Install vector packages (dnf) step 1
          ansible.builtin.shell: |
            sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
          when: ansible_facts['pkg_mgr'] == 'dnf'
    
        - name: Install vector packages (dnf) step 2
          ansible.builtin.dnf:
            name:
              - "vector-{{ vector_version_rpm }}-1.x86_64.rpm"
            disable_gpg_check: yes
          notify: Reload vector
          when: ansible_facts['pkg_mgr'] == 'dnf'
    
        - name: Install vector packages (apt) step 1
          ansible.builtin.shell: |
            apt-get update &&
            apt install -y curl &&
            curl --proto '=https' --tlsv1.2 -O  https://packages.timber.io/vector/{{ vector_version_deb }}-1_amd64.deb && ls
          when: ansible_facts['pkg_mgr'] == 'apt'
    
        - name: Install vector packages (apt) step 2
          ansible.builtin.apt:
            deb: vector_{{ vector_version_deb }}-1_amd64.deb
          notify: Reload vector
          when: ansible_facts['pkg_mgr'] == 'apt'
      tags:
        - packages
    
    - name: Vector template
      ansible.builtin.template:
        src: vector.j2
        dest: vector.yml
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        # validate: vector validate --no-environment --config-yaml %s
      notify: Reload vector
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Vector config validate
      ansible.builtin.command: "vector validate --no-environment vector.yml"
      register: valid_config
    
    # - name: Vector start service
    #   become: true
    #   ansible.builtin.command: "/usr/bin/vector --config-yaml vector.yml --watch-config"
    #   background: yes

    - name: Check vector process PID
      shell: >
        echo -n $(pgrep vector)
      register: vector_pid

    - name: Kill process
      ansible.builtin.shell:
        cmd: "kill {{ vector_pid.stdout }}"
      when: vector_pid.stdout is defined and vector_pid.stdout != ''
    
    - name: Run command in background
      ansible.builtin.shell:
        cmd: "/usr/bin/vector --config-yaml vector.yml --watch-config &"

